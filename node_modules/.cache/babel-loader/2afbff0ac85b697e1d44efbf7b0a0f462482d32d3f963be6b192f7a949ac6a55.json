{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000\n});\nexport default {\n  data() {\n    return {\n      carrito: [],\n      totalCarrito: 0,\n      id_cliente: null,\n      metodo_pago_id: 1\n    };\n  },\n  methods: {\n    async cargarCarrito() {\n      const token = localStorage.getItem(\"token\");\n      this.id_cliente = localStorage.getItem(\"id_cliente\");\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n      if (!this.id_cliente) {\n        alert(\"El cliente no está definido.\");\n        return;\n      }\n      try {\n        const response = await axiosInstance.get(`/auth/carrito/`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Respuesta de la API:\", response.data);\n        if (typeof response.data === 'object' && response.data.carrito) {\n          this.carrito = response.data.carrito;\n          this.actualizarTotal();\n        } else {\n          console.error(\"Respuesta inesperada:\", response.data);\n          alert(\"Error al cargar el carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al cargar el carrito:\", error);\n        alert(\"Error al cargar el carrito.\");\n      }\n    },\n    async eliminarDelCarrito(id_carrito_producto, index) {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n      try {\n        const response = await axiosInstance.delete(`/auth/carrito/${id_carrito_producto}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.message === \"Producto eliminado del carrito\") {\n          this.carrito.splice(index, 1);\n          this.actualizarTotal();\n        } else {\n          alert(\"Error al eliminar el producto del carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al eliminar del carrito:\", error);\n        alert(\"Error al eliminar el producto del carrito.\");\n      }\n    },\n    async procesarVenta() {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n      if (this.carrito.length === 0) {\n        alert(\"Tu carrito está vacío.\");\n        return;\n      }\n      try {\n        const response = await axiosInstance.post(\"/auth/venta\", {\n          id_cliente: this.id_cliente,\n          productos: this.carrito.map(item => ({\n            id_producto: item.id_producto,\n            cantidad: item.cantidad\n          })),\n          metodo_pago_id: this.metodo_pago_id\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.data.message === \"Venta procesada\") {\n          alert(\"Compra finalizada con éxito.\");\n          this.carrito = [];\n          this.totalCarrito = 0;\n          this.$router.push({\n            name: \"ConfirmacionCompra\"\n          });\n        } else {\n          alert(\"Error al procesar la venta.\");\n        }\n      } catch (error) {\n        console.error(\"Error al procesar la venta:\", error);\n        alert(\"Error al procesar la venta.\");\n      }\n    },\n    actualizarTotal() {\n      this.totalCarrito = this.carrito.reduce((total, item) => {\n        return total + item.precio_unitario * item.cantidad;\n      }, 0);\n    }\n  },\n  mounted() {\n    this.cargarCarrito();\n  }\n};","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","timeout","data","carrito","totalCarrito","id_cliente","metodo_pago_id","methods","cargarCarrito","token","localStorage","getItem","alert","response","get","headers","Authorization","console","log","actualizarTotal","error","eliminarDelCarrito","id_carrito_producto","index","delete","message","splice","procesarVenta","length","post","productos","map","item","id_producto","cantidad","$router","push","name","reduce","total","precio_unitario","mounted"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\MiCarrito.vue"],"sourcesContent":["<template>\n  <div class=\"mi-carrito\">\n    <h3>Carrito de Compras</h3>\n    <div v-if=\"carrito.length > 0\">\n      <ul>\n        <li v-for=\"(item, index) in carrito\" :key=\"item.id_carrito_producto\">\n          {{ item.descripcion }} - ${{ item.precio_unitario }} x\n          {{ item.cantidad }}\n          <button\n            class=\"btn-eliminar\"\n            @click=\"eliminarDelCarrito(item.id_carrito_producto, index)\"\n          >\n            Eliminar\n          </button>\n        </li>\n      </ul>\n      <p>Total: ${{ totalCarrito }}</p>\n      <button class=\"btn-procesar\" @click=\"procesarVenta\">\n        Finalizar Compra\n      </button>\n    </div>\n    <div v-else>\n      <p>Tu carrito está vacío.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000,\n});\n\nexport default {\n  data() {\n    return {\n      carrito: [],\n      totalCarrito: 0,\n      id_cliente: null,\n      metodo_pago_id: 1,\n    };\n  },\n  methods: {\n    async cargarCarrito() {\n      const token = localStorage.getItem(\"token\");\n      this.id_cliente = localStorage.getItem(\"id_cliente\");\n\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n\n      if (!this.id_cliente) {\n        alert(\"El cliente no está definido.\");\n        return;\n      }\n\n      try {\n        const response = await axiosInstance.get(\n          `/auth/carrito/`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        console.log(\"Respuesta de la API:\", response.data);\n        \n        if (typeof response.data === 'object' && response.data.carrito) {\n          this.carrito = response.data.carrito;\n          this.actualizarTotal();\n        } else {\n          console.error(\"Respuesta inesperada:\", response.data);\n          alert(\"Error al cargar el carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al cargar el carrito:\", error);\n        alert(\"Error al cargar el carrito.\");\n      }\n    },\n\n    async eliminarDelCarrito(id_carrito_producto, index) {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n\n      try {\n        const response = await axiosInstance.delete(\n          `/auth/carrito/${id_carrito_producto}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.data.message === \"Producto eliminado del carrito\") {\n          this.carrito.splice(index, 1);\n          this.actualizarTotal();\n        } else {\n          alert(\"Error al eliminar el producto del carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al eliminar del carrito:\", error);\n        alert(\"Error al eliminar el producto del carrito.\");\n      }\n    },\n\n    async procesarVenta() {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n\n      if (this.carrito.length === 0) {\n        alert(\"Tu carrito está vacío.\");\n        return;\n      }\n\n      try {\n        const response = await axiosInstance.post(\n          \"/auth/venta\",\n          {\n            id_cliente: this.id_cliente,\n            productos: this.carrito.map((item) => ({\n              id_producto: item.id_producto,\n              cantidad: item.cantidad\n            })),\n            metodo_pago_id: this.metodo_pago_id,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        if (response.data.message === \"Venta procesada\") {\n          alert(\"Compra finalizada con éxito.\");\n          this.carrito = [];\n          this.totalCarrito = 0;\n          this.$router.push({ name: \"ConfirmacionCompra\" });\n        } else {\n          alert(\"Error al procesar la venta.\");\n        }\n      } catch (error) {\n        console.error(\"Error al procesar la venta:\", error);\n        alert(\"Error al procesar la venta.\");\n      }\n    },\n\n    actualizarTotal() {\n      this.totalCarrito = this.carrito.reduce((total, item) => {\n        return total + item.precio_unitario * item.cantidad;\n      }, 0);\n    },\n  },\n  mounted() {\n    this.cargarCarrito();\n  },\n};\n</script>\n\n<style scoped>\n.mi-carrito {\n  /* Agrega estilos específicos aquí */\n}\n.btn-eliminar {\n  /* Estilo para el botón de eliminar */\n}\n.btn-procesar {\n  /* Estilo para el botón de procesar */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}