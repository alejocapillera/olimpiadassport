{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      producto: {\n        codigo_producto: \"\",\n        descripcion: \"\",\n        precio_unitario: 0,\n        stock: 0,\n        id_subcategoria: null\n      },\n      subcategorias: []\n    };\n  },\n  methods: {\n    async fetchSubcategorias() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/api/subcategorias\");\n        this.subcategorias = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener las subcategorías:\", error);\n      }\n    },\n    async agregarProducto() {\n      try {\n        await axios.post(\"http://localhost:3001/api/productos\", this.producto);\n        alert(\"Producto agregado exitosamente.\");\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error al agregar el producto:\", error);\n        alert(\"Error al agregar el producto.\");\n      }\n    },\n    resetForm() {\n      this.producto = {\n        codigo_producto: \"\",\n        descripcion: \"\",\n        precio_unitario: 0,\n        stock: 0,\n        id_subcategoria: null\n      };\n    }\n  },\n  mounted() {\n    this.fetchSubcategorias();\n  }\n};","map":{"version":3,"names":["axios","data","producto","codigo_producto","descripcion","precio_unitario","stock","id_subcategoria","subcategorias","methods","fetchSubcategorias","response","get","error","console","agregarProducto","post","alert","resetForm","mounted"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\CargaProductos.vue"],"sourcesContent":["<template>\n  <div class=\"carga-productos\">\n    <h2>Agregar Producto</h2>\n    <form @submit.prevent=\"agregarProducto\">\n      <div>\n        <label for=\"codigo_producto\">Código del Producto:</label>\n        <input\n          v-model=\"producto.codigo_producto\"\n          type=\"text\"\n          id=\"codigo_producto\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"descripcion\">Descripción:</label>\n        <input\n          v-model=\"producto.descripcion\"\n          type=\"text\"\n          id=\"descripcion\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"precio_unitario\">Precio Unitario:</label>\n        <input\n          v-model=\"producto.precio_unitario\"\n          type=\"number\"\n          id=\"precio_unitario\"\n          step=\"0.01\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"stock\">Stock:</label>\n        <input v-model=\"producto.stock\" type=\"number\" id=\"stock\" required />\n      </div>\n      <div>\n        <label for=\"id_subcategoria\">Subcategoría:</label>\n        <select\n          v-model=\"producto.id_subcategoria\"\n          id=\"id_subcategoria\"\n          required\n        >\n          <option\n            v-for=\"subcategoria in subcategorias\"\n            :key=\"subcategoria.id_subcategoria\"\n            :value=\"subcategoria.id_subcategoria\"\n          >\n            {{ subcategoria.nombre_categoria }}\n          </option>\n        </select>\n      </div>\n      <button type=\"submit\">Agregar Producto</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      producto: {\n        codigo_producto: \"\",\n        descripcion: \"\",\n        precio_unitario: 0,\n        stock: 0,\n        id_subcategoria: null,\n      },\n      subcategorias: [],\n    };\n  },\n  methods: {\n    async fetchSubcategorias() {\n      try {\n        const response = await axios.get(\n          \"http://localhost:3000/api/subcategorias\"\n        );\n        this.subcategorias = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener las subcategorías:\", error);\n      }\n    },\n    async agregarProducto() {\n      try {\n        await axios.post(\"http://localhost:3001/api/productos\", this.producto);\n        alert(\"Producto agregado exitosamente.\");\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error al agregar el producto:\", error);\n        alert(\"Error al agregar el producto.\");\n      }\n    },\n    resetForm() {\n      this.producto = {\n        codigo_producto: \"\",\n        descripcion: \"\",\n        precio_unitario: 0,\n        stock: 0,\n        id_subcategoria: null,\n      };\n    },\n  },\n  mounted() {\n    this.fetchSubcategorias();\n  },\n};\n</script>\n\n<style scoped>\n.carga-productos {\n  padding: 20px;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\nlabel {\n  margin-bottom: 5px;\n}\n\ninput,\nselect {\n  padding: 8px;\n  font-size: 16px;\n}\n\nbutton {\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":"AA0DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,eAAe,EAAE,EAAE;QACnBC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE,CAAC;QAClBC,KAAK,EAAE,CAAC;QACRC,eAAe,EAAE;MACnB,CAAC;MACDC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAC9B,yCACF,CAAC;QACD,IAAI,CAACJ,aAAY,GAAIG,QAAQ,CAACV,IAAI;MACpC,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACD,MAAME,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMf,KAAK,CAACgB,IAAI,CAAC,qCAAqC,EAAE,IAAI,CAACd,QAAQ,CAAC;QACtEe,KAAK,CAAC,iCAAiC,CAAC;QACxC,IAAI,CAACC,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDI,KAAK,CAAC,+BAA+B,CAAC;MACxC;IACF,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAAChB,QAAO,GAAI;QACdC,eAAe,EAAE,EAAE;QACnBC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE,CAAC;QAClBC,KAAK,EAAE,CAAC;QACRC,eAAe,EAAE;MACnB,CAAC;IACH;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,kBAAkB,CAAC,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}