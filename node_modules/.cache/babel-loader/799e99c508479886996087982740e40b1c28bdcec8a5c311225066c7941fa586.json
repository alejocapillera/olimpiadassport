{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      isLoggedIn: false,\n      isPersonal: false\n    };\n  },\n  created() {\n    this.checkUserRole();\n  },\n  methods: {\n    checkUserRole() {\n      // Aquí debes obtener la información del usuario actual y verificar el rol\n      // Esto puede incluir una llamada a tu API o obtener los datos del almacenamiento local\n      // Por ejemplo:\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (user) {\n        this.isLoggedIn = true;\n        this.isPersonal = user.id_personal !== undefined; // Ajusta según la estructura de tu usuario\n      }\n    },\n    logout() {\n      // Implementa la lógica para cerrar sesión\n      localStorage.removeItem('user');\n      this.isLoggedIn = false;\n      this.isPersonal = false;\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["data","isLoggedIn","isPersonal","created","checkUserRole","methods","user","JSON","parse","localStorage","getItem","id_personal","undefined","logout","removeItem","$router","push"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\MenuPrincipal.vue"],"sourcesContent":["<template>\n  <div>\n    <header class=\"header\">\n      <b-container fluid>\n        <b-row class=\"align-items-center\">\n          <b-col class=\"d-flex align-items-center\">\n            <router-link to=\"/\">\n              <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\" />\n            </router-link>\n          </b-col>\n          <b-col class=\"d-none d-md-flex justify-content-end\">\n            <router-link to=\"/home\">\n              <b-button class=\"menu-button mr-2\">\n                <i class=\"fa-solid fa-home\"></i> Inicio\n              </b-button>\n            </router-link>\n            <router-link to=\"/miscompras\">\n              <b-button class=\"menu-button mr-2\">\n                <i class=\"fa-solid fa-cart-shopping\"></i> Mis compras\n              </b-button>\n            </router-link>\n            <!-- Mostrar el botón de Productos solo si el usuario es id_personal -->\n            <template v-if=\"isPersonal\">\n              <router-link to=\"/productosventas\">\n                <b-button class=\"menu-button\">\n                  <i class=\"fa-solid fa-box\"></i> Productos\n                </b-button>\n              </router-link>\n            </template>\n            <template v-if=\"isLoggedIn\">\n              <b-button class=\"menu-button mr-2\" @click=\"logout\">\n                <i class=\"fa-solid fa-sign-out-alt\"></i> Cerrar sesión\n              </b-button>\n            </template>\n            <template v-else>\n              <router-link to=\"/login\">\n                <b-button class=\"menu-button mr-2\">\n                  <i class=\"fa-solid fa-user\"></i> Iniciar sesión\n                </b-button>\n              </router-link>\n            </template>\n          </b-col>\n        </b-row>\n      </b-container>\n    </header>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isLoggedIn: false,\n      isPersonal: false\n    };\n  },\n  created() {\n    this.checkUserRole();\n  },\n  methods: {\n    checkUserRole() {\n      // Aquí debes obtener la información del usuario actual y verificar el rol\n      // Esto puede incluir una llamada a tu API o obtener los datos del almacenamiento local\n      // Por ejemplo:\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (user) {\n        this.isLoggedIn = true;\n        this.isPersonal = user.id_personal !== undefined; // Ajusta según la estructura de tu usuario\n      }\n    },\n    logout() {\n      // Implementa la lógica para cerrar sesión\n      localStorage.removeItem('user');\n      this.isLoggedIn = false;\n      this.isPersonal = false;\n      this.$router.push('/login');\n    }\n  }\n};\n</script>\n>\n<style scoped>\n.header {\n  background-color: #0a641a;\n  padding: 10px 0;\n  z-index: 1000000;\n}\n\n.logo {\n  width: 180px;\n  cursor: pointer;\n}\n\n.menu-button {\n  font-weight: bold;\n  color: #fff;\n  background: #0a641a;\n  border: none;\n  font-size: 1.2rem;\n  transition: color 0.3s ease;\n}\n\n.menu-button:hover {\n  background: #0a641a;\n  color: #ff9800;\n}\n\n.menu-button i {\n  background: #0a641a;\n  margin-right: 0.5rem;\n  color: #ff9800;\n}\n\n.menu-toggle {\n  font-size: 1.5rem;\n  background: #0a641a;\n  color: #ff9800;\n  border: none;\n  position: relative;\n  margin-right: -0.5rem;\n}\n\n.b-col.d-md-none.text-right {\n  padding-right: 0;\n  text-align: right;\n}\n\n.b-collapse {\n  background-color: #0a641a;\n  padding: 10px;\n}\n\n@media (max-width: 768px) {\n  .menu-button {\n    width: 100%;\n    background: #0a641a;\n    text-align: left;\n  }\n}\n</style>\n"],"mappings":";AAiDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACd;MACA;MACA;MACA,MAAME,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACrD,IAAIJ,IAAI,EAAE;QACR,IAAI,CAACL,UAAS,GAAI,IAAI;QACtB,IAAI,CAACC,UAAS,GAAII,IAAI,CAACK,WAAU,KAAMC,SAAS,EAAE;MACpD;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP;MACAJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;MAC/B,IAAI,CAACb,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,UAAS,GAAI,KAAK;MACvB,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}