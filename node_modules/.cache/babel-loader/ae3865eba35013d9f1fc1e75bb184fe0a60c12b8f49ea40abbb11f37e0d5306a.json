{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      carrito: [],\n      totalCarrito: 0,\n      id_cliente: null,\n      metodo_pago_id: 1 // Valor predeterminado, ajusta si es necesario\n    };\n  },\n  methods: {\n    async cargarCarrito() {\n      const token = localStorage.getItem(\"token\");\n      this.id_cliente = localStorage.getItem(\"id_cliente\");\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n      if (!this.id_cliente) {\n        alert(\"El cliente no está definido.\");\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:3001/api/auth/carrito\", {\n          id_cliente: this.id_cliente\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.carrito) {\n          this.carrito = response.data.carrito;\n          this.actualizarTotal();\n        } else {\n          console.error(\"Respuesta inesperada:\", response.data);\n          alert(\"Error al cargar el carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al cargar el carrito:\", error);\n        alert(\"Error al cargar el carrito.\");\n      }\n    },\n    async eliminarDelCarrito(index) {\n      const token = localStorage.getItem(\"token\");\n      const producto = this.carrito[index];\n      try {\n        const response = await axios.delete(`http://localhost:3001/api/auth/carrito/${producto.id_carrito_producto}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.message === \"Producto eliminado del carrito\") {\n          this.carrito.splice(index, 1);\n          this.actualizarTotal();\n        } else {\n          alert(\"Error al eliminar el producto del carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al eliminar del carrito:\", error);\n        alert(\"Error al eliminar el producto del carrito.\");\n      }\n    },\n    async procesarVenta() {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:3001/api/auth/carrito\", {\n          id_cliente: this.id_cliente\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.message === \"Venta procesada\") {\n          alert(\"Compra finalizada con éxito.\");\n          this.carrito = [];\n          this.totalCarrito = 0;\n          // Redirigir o hacer cualquier otra acción después de procesar la venta\n          this.$router.push({\n            name: \"ConfirmacionCompra\"\n          });\n        } else {\n          alert(\"Error al procesar la venta.\");\n        }\n      } catch (error) {\n        console.error(\"Error al procesar la venta:\", error);\n        alert(\"Error al procesar la venta.\");\n      }\n    },\n    actualizarTotal() {\n      this.totalCarrito = this.carrito.reduce((total, item) => {\n        return total + item.precio_unitario * item.cantidad;\n      }, 0);\n    }\n  },\n  mounted() {\n    this.cargarCarrito();\n  }\n};","map":{"version":3,"names":["axios","data","carrito","totalCarrito","id_cliente","metodo_pago_id","methods","cargarCarrito","token","localStorage","getItem","alert","response","post","headers","Authorization","actualizarTotal","console","error","eliminarDelCarrito","index","producto","delete","id_carrito_producto","message","splice","procesarVenta","$router","push","name","reduce","total","item","precio_unitario","cantidad","mounted"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\MiCarrito.vue"],"sourcesContent":["<template>\n  <div class=\"mi-carrito\">\n    <h3>Carrito de Compras</h3>\n    <div v-if=\"carrito.length > 0\">\n      <ul>\n        <li v-for=\"(item, index) in carrito\" :key=\"item.id_carrito_producto\">\n          {{ item.descripcion }} - ${{ item.precio_unitario }} x\n          {{ item.cantidad }}\n          <button class=\"btn-eliminar\" @click=\"eliminarDelCarrito(index)\">\n            Eliminar\n          </button>\n        </li>\n      </ul>\n      <p>Total: ${{ totalCarrito }}</p>\n      <button class=\"btn-procesar\" @click=\"procesarVenta\">\n        Finalizar Compra\n      </button>\n    </div>\n    <div v-else>\n      <p>Tu carrito está vacío.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      carrito: [],\n      totalCarrito: 0,\n      id_cliente: null,\n      metodo_pago_id: 1, // Valor predeterminado, ajusta si es necesario\n    };\n  },\n  methods: {\n    async cargarCarrito() {\n      const token = localStorage.getItem(\"token\");\n      this.id_cliente = localStorage.getItem(\"id_cliente\");\n\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n\n      if (!this.id_cliente) {\n        alert(\"El cliente no está definido.\");\n        return;\n      }\n\n      try {\n        const response = await axios.post(\n          \"http://localhost:3001/api/auth/carrito\",\n          {\n            id_cliente: this.id_cliente,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.data.carrito) {\n          this.carrito = response.data.carrito;\n          this.actualizarTotal();\n        } else {\n          console.error(\"Respuesta inesperada:\", response.data);\n          alert(\"Error al cargar el carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al cargar el carrito:\", error);\n        alert(\"Error al cargar el carrito.\");\n      }\n    },\n\n    async eliminarDelCarrito(index) {\n      const token = localStorage.getItem(\"token\");\n      const producto = this.carrito[index];\n\n      try {\n        const response = await axios.delete(\n          `http://localhost:3001/api/auth/carrito/${producto.id_carrito_producto}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.data.message === \"Producto eliminado del carrito\") {\n          this.carrito.splice(index, 1);\n          this.actualizarTotal();\n        } else {\n          alert(\"Error al eliminar el producto del carrito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al eliminar del carrito:\", error);\n        alert(\"Error al eliminar el producto del carrito.\");\n      }\n    },\n\n    async procesarVenta() {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n\n      try {\n        const response = await axios.post(\n  \"http://localhost:3001/api/auth/carrito\",\n  {\n    id_cliente: this.id_cliente,\n  },\n  {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n);\n\n        if (response.data.message === \"Venta procesada\") {\n          alert(\"Compra finalizada con éxito.\");\n          this.carrito = [];\n          this.totalCarrito = 0;\n          // Redirigir o hacer cualquier otra acción después de procesar la venta\n          this.$router.push({ name: \"ConfirmacionCompra\" });\n        } else {\n          alert(\"Error al procesar la venta.\");\n        }\n      } catch (error) {\n        console.error(\"Error al procesar la venta:\", error);\n        alert(\"Error al procesar la venta.\");\n      }\n    },\n\n    actualizarTotal() {\n      this.totalCarrito = this.carrito.reduce((total, item) => {\n        return total + item.precio_unitario * item.cantidad;\n      }, 0);\n    },\n  },\n  mounted() {\n    this.cargarCarrito();\n  },\n};\n</script>\n\n<style scoped>\n.mi-carrito {\n  /* Agrega estilos específicos aquí */\n}\n.btn-eliminar {\n  /* Estilo para el botón de eliminar */\n}\n.btn-procesar {\n  /* Estilo para el botón de procesar */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}