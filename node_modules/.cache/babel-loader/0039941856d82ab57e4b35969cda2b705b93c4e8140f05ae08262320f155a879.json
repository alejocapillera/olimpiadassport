{"ast":null,"code":"import axios from \"axios\";\nimport { BModal, BButton } from \"bootstrap-vue-3\";\nimport Swal from \"sweetalert2\";\nexport default {\n  components: {\n    BModal,\n    BButton\n  },\n  data() {\n    return {\n      pedidos: [],\n      searchQuery: \"\",\n      // Para el campo de búsqueda\n      currentPage: 1,\n      // Página actual\n      itemsPerPage: 10,\n      // Número de ventas por página\n      showModalEstado: false,\n      showModalCuenta: false,\n      currentPedido: {},\n      currentCliente: {}\n    };\n  },\n  computed: {\n    filteredPedidos() {\n      // Filtrar pedidos según la consulta de búsqueda\n      return this.pedidos.filter(pedido => pedido.nombre_cliente.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    },\n    paginatedPedidos() {\n      // Calcular los pedidos que se mostrarán en la página actual\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredPedidos.slice(start, end);\n    },\n    totalPages() {\n      // Calcular el número total de páginas\n      return Math.ceil(this.filteredPedidos.length / this.itemsPerPage);\n    }\n  },\n  methods: {\n    async fetchPedidos() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:3001/api/pedidos\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.pedidos = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener los pedidos:\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Error al obtener los pedidos.\"\n        });\n      }\n    },\n    verEstadoPedido(idPedido) {\n      const pedido = this.pedidos.find(p => p.id_pedido === idPedido);\n      if (pedido) {\n        this.currentPedido = pedido;\n        this.showModalEstado = true;\n      }\n    },\n    verEstadoCuenta(idCliente) {\n      const cliente = this.pedidos.find(p => p.id_cliente === idCliente);\n      if (cliente) {\n        this.currentCliente = cliente;\n        this.showModalCuenta = true;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    async realizarEntrega(idPedido) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.put(`http://localhost:3001/api/pedidos/${idPedido}/entregar`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.fetchPedidos();\n        Swal.fire({\n          icon: \"success\",\n          title: \"Éxito\",\n          text: \"Pedido marcado como entregado.\"\n        });\n      } catch (error) {\n        console.error(\"Error al realizar la entrega:\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Error al marcar el pedido como entregado.\"\n        });\n      }\n    },\n    async anularPedido(idPedido) {\n      const confirmacion = await Swal.fire({\n        title: \"Confirmar Anulación\",\n        text: \"¿Estás seguro de que deseas anular este pedido?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#0a641a\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Sí, anular\",\n        cancelButtonText: \"Cancelar\"\n      });\n      if (!confirmacion.isConfirmed) return;\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.delete(`http://localhost:3001/api/pedidos/${idPedido}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.fetchPedidos();\n        Swal.fire({\n          icon: \"success\",\n          title: \"Éxito\",\n          text: \"Pedido anulado.\"\n        });\n      } catch (error) {\n        console.error(\"Error al anular el pedido:\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Error al anular el pedido.\"\n        });\n      }\n    }\n  },\n  mounted() {\n    this.fetchPedidos();\n  }\n};","map":{"version":3,"names":["axios","BModal","BButton","Swal","components","data","pedidos","searchQuery","currentPage","itemsPerPage","showModalEstado","showModalCuenta","currentPedido","currentCliente","computed","filteredPedidos","filter","pedido","nombre_cliente","toLowerCase","includes","paginatedPedidos","start","end","slice","totalPages","Math","ceil","length","methods","fetchPedidos","token","localStorage","getItem","response","get","headers","Authorization","error","console","fire","icon","title","text","verEstadoPedido","idPedido","find","p","id_pedido","verEstadoCuenta","idCliente","cliente","id_cliente","prevPage","nextPage","realizarEntrega","put","anularPedido","confirmacion","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","delete","mounted"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\ListaVentas.vue"],"sourcesContent":["<template>\n  <div class=\"ventas-container\">\n    <h1 class=\"ventas-title\">Lista de Ventas</h1>\n\n    <!-- Buscador -->\n    <div class=\"search-container\">\n      <input\n        type=\"text\"\n        v-model=\"searchQuery\"\n        placeholder=\"Buscar por nombre de cliente...\"\n        class=\"search-input\"\n      />\n    </div>\n\n    <div class=\"table-container\">\n      <table class=\"ventas-table\">\n        <thead>\n          <tr>\n            <th>Cliente</th>\n            <th>Monto total</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"pedido in paginatedPedidos\" :key=\"pedido.id_pedido\">\n            <td>{{ pedido.nombre_cliente }}</td>\n            <td>{{ pedido.total }}</td>\n            <td>\n              <button\n                @click=\"verEstadoPedido(pedido.id_pedido)\"\n                class=\"btn-ver\"\n              >\n                Ver Estado\n              </button>\n              <button\n                @click=\"realizarEntrega(pedido.id_pedido)\"\n                :disabled=\"pedido.estado_nombre !== 'Pendiente'\"\n                class=\"btn-entrega\"\n              >\n                Realizar Entrega\n              </button>\n              <button\n                @click=\"verEstadoCuenta(pedido.id_cliente)\"\n                class=\"btn-cuenta\"\n              >\n                Ver Estado de Cuenta\n              </button>\n              <button\n                @click=\"anularPedido(pedido.id_pedido)\"\n                class=\"btn-anular\"\n              >\n                Anular Pedido\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Paginación -->\n    <div class=\"pagination-container\">\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Anterior</button>\n      <span>Página {{ currentPage }} de {{ totalPages }}</span>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Siguiente</button>\n    </div>\n\n    <!-- Modal para Ver Estado del Pedido -->\n    <b-modal\n      id=\"modalVerEstado\"\n      title=\"Estado del Pedido\"\n      v-model=\"showModalEstado\"\n    >\n      <p>Pedido: #{{ currentPedido.id_pedido }}</p>\n      <p>Estado: {{ currentPedido.estado_nombre }}</p>\n      <b-button @click=\"showModalEstado = false\">Cerrar</b-button>\n    </b-modal>\n\n    <!-- Modal para Ver Estado de Cuenta -->\n    <b-modal\n      id=\"modalVerCuenta\"\n      title=\"Estado de Cuenta\"\n      v-model=\"showModalCuenta\"\n    >\n      <p>Cliente: #{{ currentCliente.id_cliente }}</p>\n      <p>Estado de cuenta: Estático</p>\n      <b-button @click=\"showModalCuenta = false\">Cerrar</b-button>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { BModal, BButton } from \"bootstrap-vue-3\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  components: {\n    BModal,\n    BButton,\n  },\n  data() {\n    return {\n      pedidos: [],\n      searchQuery: \"\", // Para el campo de búsqueda\n      currentPage: 1, // Página actual\n      itemsPerPage: 10, // Número de ventas por página\n      showModalEstado: false,\n      showModalCuenta: false,\n      currentPedido: {},\n      currentCliente: {},\n    };\n  },\n  computed: {\n    filteredPedidos() {\n      // Filtrar pedidos según la consulta de búsqueda\n      return this.pedidos.filter((pedido) =>\n        pedido.nombre_cliente.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n    paginatedPedidos() {\n      // Calcular los pedidos que se mostrarán en la página actual\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredPedidos.slice(start, end);\n    },\n    totalPages() {\n      // Calcular el número total de páginas\n      return Math.ceil(this.filteredPedidos.length / this.itemsPerPage);\n    },\n  },\n  methods: {\n    async fetchPedidos() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:3001/api/pedidos\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        this.pedidos = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener los pedidos:\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Error al obtener los pedidos.\",\n        });\n      }\n    },\n    verEstadoPedido(idPedido) {\n      const pedido = this.pedidos.find((p) => p.id_pedido === idPedido);\n      if (pedido) {\n        this.currentPedido = pedido;\n        this.showModalEstado = true;\n      }\n    },\n    verEstadoCuenta(idCliente) {\n      const cliente = this.pedidos.find((p) => p.id_cliente === idCliente);\n      if (cliente) {\n        this.currentCliente = cliente;\n        this.showModalCuenta = true;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    async realizarEntrega(idPedido) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.put(\n          `http://localhost:3001/api/pedidos/${idPedido}/entregar`,\n          {},\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        this.fetchPedidos();\n        Swal.fire({\n          icon: \"success\",\n          title: \"Éxito\",\n          text: \"Pedido marcado como entregado.\",\n        });\n      } catch (error) {\n        console.error(\"Error al realizar la entrega:\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Error al marcar el pedido como entregado.\",\n        });\n      }\n    },\n    async anularPedido(idPedido) {\n      const confirmacion = await Swal.fire({\n        title: \"Confirmar Anulación\",\n        text: \"¿Estás seguro de que deseas anular este pedido?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#0a641a\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Sí, anular\",\n        cancelButtonText: \"Cancelar\",\n      });\n\n      if (!confirmacion.isConfirmed) return;\n\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.delete(`http://localhost:3001/api/pedidos/${idPedido}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        this.fetchPedidos();\n        Swal.fire({\n          icon: \"success\",\n          title: \"Éxito\",\n          text: \"Pedido anulado.\",\n        });\n      } catch (error) {\n        console.error(\"Error al anular el pedido:\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Error al anular el pedido.\",\n        });\n      }\n    },\n  },\n  mounted() {\n    this.fetchPedidos();\n  },\n};\n</script>\n\n<style scoped>\n.ventas-container {\n  padding: 20px;\n  background-color: #f4f4f4;\n}\n\n.ventas-title {\n  text-align: center;\n  color: #333;\n  margin-bottom: 20px;\n}\n\n.table-container {\n  margin: 0 auto;\n  max-width: 100%;\n  overflow-x: auto;\n}\n\n.ventas-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.pagination-container button {\n  padding: 8px 12px;\n  margin: 0 5px;\n  border: none;\n  background-color: #0a641a;\n  color: #fff;\n  cursor: pointer;\n  border-radius: 4px;\n}\n\n.pagination-container button:disabled {\n  background-color: #bdc3c7;\n  cursor: not-allowed;\n}\n\n.pagination-container span {\n  margin: 0 10px;\n  font-weight: bold;\n}\n\n.search-container {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.search-input {\n  padding: 8px;\n  width: 100%;\n  max-width: 400px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.ventas-table th,\n.ventas-table td {\n  padding: 12px;\n  border: 1px solid #ddd;\n}\n\n.ventas-table th {\n  background-color: #0a641a;\n  color: #fff;\n}\n\ntd.estado-pendiente {\n  color: #f1c40f;\n}\n\ntd.estado-enviado {\n  color: #2980b9;\n}\n\ntd.estado-entregado {\n  color: #2ecc71;\n}\n\nbutton {\n  padding: 5px 10px;\n  margin: 2px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  color: #fff;\n  font-size: 14px;\n}\n\n.btn-ver {\n  background-color: #3498db;\n}\n\n.btn-entrega {\n  background-color: #0a641a;\n}\n\n.btn-cuenta {\n  background-color: #f1c40f;\n}\n\n.btn-anular {\n  background-color: #e74c3c;\n}\n\nbutton:disabled {\n  background-color: #bdc3c7;\n  cursor: not-allowed;\n}\n\nbutton:hover:not(:disabled) {\n  opacity: 0.8;\n}\n\nbutton:active:not(:disabled) {\n  transform: scale(0.95);\n}\n\n/* Pantallas hasta 768px de ancho */\n@media (max-width: 768px) {\n  .ventas-table th,\n  .ventas-table td {\n    padding: 8px;\n    font-size: 14px;\n  }\n\n  button {\n    padding: 4px 8px;\n    font-size: 12px;\n  }\n}\n\n/* Pantallas hasta 480px de ancho */\n@media (max-width: 480px) {\n  .ventas-table th,\n  .ventas-table td {\n    padding: 6px;\n    font-size: 12px;\n  }\n\n  button {\n    padding: 3px 6px;\n    font-size: 10px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}