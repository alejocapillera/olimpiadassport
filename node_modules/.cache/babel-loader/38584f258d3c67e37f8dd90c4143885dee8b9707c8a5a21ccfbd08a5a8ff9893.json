{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      pedidos: []\n    };\n  },\n  methods: {\n    async fetchPedidos() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:3001/api/pedidos\", {\n          headers: {\n            Authorization: `Bearer ${token}` // Asegúrate de enviar el token en el formato correcto\n          }\n        });\n        this.pedidos = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener los pedidos:\", error);\n      }\n    },\n    async verEstadoPedido(idPedido) {\n      // Lógica para ver el estado del pedido\n      console.log(\"Ver estado del pedido:\", idPedido);\n    },\n    async realizarEntrega(idPedido) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.put(`http://localhost:3001/api/pedidos/${idPedido}/entregar`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.fetchPedidos(); // Refrescar la lista de pedidos\n        alert(\"Pedido marcado como entregado\");\n      } catch (error) {\n        console.error(\"Error al realizar la entrega:\", error);\n      }\n    },\n    async verEstadoCuenta(idCliente) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(`http://localhost:3001/api/estado-cuenta?orden=cliente`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Estado de cuenta del cliente:\", idCliente, response.data);\n        // Lógica para mostrar el estado de cuenta del cliente (por ejemplo, abrir un modal)\n      } catch (error) {\n        console.error(\"Error al obtener el estado de cuenta:\", error);\n      }\n    },\n    async anularPedido(idPedido) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.delete(`http://localhost:3001/api/pedidos/${idPedido}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.fetchPedidos(); // Refrescar la lista de pedidos\n        alert(\"Pedido anulado\");\n      } catch (error) {\n        console.error(\"Error al anular el pedido:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchPedidos();\n  }\n};","map":{"version":3,"names":["axios","data","pedidos","methods","fetchPedidos","token","localStorage","getItem","response","get","headers","Authorization","error","console","verEstadoPedido","idPedido","log","realizarEntrega","put","alert","verEstadoCuenta","idCliente","anularPedido","delete","mounted"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\ListaVentas.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Lista de Ventas</h1>\n    <table>\n      <thead>\n        <tr>\n          <th>ID Pedido</th>\n          <th>Cliente</th>\n          <th>Fecha</th>\n          <th>Monto Total</th>\n          <th>Estado</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"pedido in pedidos\" :key=\"pedido.id_pedido\">\n          <td>{{ pedido.id_pedido }}</td>\n          <td>{{ pedido.id_cliente }}</td>\n          <!-- Asume que tienes los nombres de los clientes disponibles -->\n          <td>{{ new Date(pedido.fecha_pedido).toLocaleString() }}</td>\n          <!-- Formateo de la fecha -->\n          <td>{{ pedido.total }}</td>\n          <td>{{ pedido.estado_nombre }}</td>\n          <!-- Estado del pedido obtenido del back-end -->\n          <td>\n            <button @click=\"verEstadoPedido(pedido.id_pedido)\">\n              Ver Estado\n            </button>\n            <button\n              @click=\"realizarEntrega(pedido.id_pedido)\"\n              :disabled=\"pedido.estado_nombre !== 'Pendiente'\"\n            >\n              Realizar Entrega\n            </button>\n            <button @click=\"verEstadoCuenta(pedido.id_cliente)\">\n              Ver Estado de Cuenta\n            </button>\n            <button @click=\"anularPedido(pedido.id_pedido)\">\n              Anular Pedido\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      pedidos: [],\n    };\n  },\n  methods: {\n    async fetchPedidos() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:3001/api/pedidos\", {\n          headers: {\n            Authorization: `Bearer ${token}`, // Asegúrate de enviar el token en el formato correcto\n          },\n        });\n        this.pedidos = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener los pedidos:\", error);\n      }\n    },\n    async verEstadoPedido(idPedido) {\n      // Lógica para ver el estado del pedido\n      console.log(\"Ver estado del pedido:\", idPedido);\n    },\n    async realizarEntrega(idPedido) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.put(\n          `http://localhost:3001/api/pedidos/${idPedido}/entregar`,\n          {},\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        this.fetchPedidos(); // Refrescar la lista de pedidos\n        alert(\"Pedido marcado como entregado\");\n      } catch (error) {\n        console.error(\"Error al realizar la entrega:\", error);\n      }\n    },\n    async verEstadoCuenta(idCliente) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\n          `http://localhost:3001/api/estado-cuenta?orden=cliente`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        console.log(\"Estado de cuenta del cliente:\", idCliente, response.data);\n        // Lógica para mostrar el estado de cuenta del cliente (por ejemplo, abrir un modal)\n      } catch (error) {\n        console.error(\"Error al obtener el estado de cuenta:\", error);\n      }\n    },\n    async anularPedido(idPedido) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.delete(`http://localhost:3001/api/pedidos/${idPedido}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        this.fetchPedidos(); // Refrescar la lista de pedidos\n        alert(\"Pedido anulado\");\n      } catch (error) {\n        console.error(\"Error al anular el pedido:\", error);\n      }\n    },\n  },\n  mounted() {\n    this.fetchPedidos();\n  },\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  padding: 10px;\n  border: 1px solid #ddd;\n}\n\nth {\n  background-color: #f4f4f4;\n}\n</style>\n"],"mappings":"AAgDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,EAAE;UACpEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAE;UACpC;QACF,CAAC,CAAC;QACF,IAAI,CAACH,OAAM,GAAIM,QAAQ,CAACP,IAAI;MAC9B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACD,MAAME,eAAeA,CAACC,QAAQ,EAAE;MAC9B;MACAF,OAAO,CAACG,GAAG,CAAC,wBAAwB,EAAED,QAAQ,CAAC;IACjD,CAAC;IACD,MAAME,eAAeA,CAACF,QAAQ,EAAE;MAC9B,IAAI;QACF,MAAMV,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMP,KAAK,CAACkB,GAAG,CACb,qCAAqCH,QAAQ,WAAW,EACxD,CAAC,CAAC,EACF;UACEL,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CACF,CAAC;QACD,IAAI,CAACD,YAAY,CAAC,CAAC,EAAE;QACrBe,KAAK,CAAC,+BAA+B,CAAC;MACxC,EAAE,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACD,MAAMQ,eAAeA,CAACC,SAAS,EAAE;MAC/B,IAAI;QACF,MAAMhB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAC9B,uDAAuD,EACvD;UACEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CACF,CAAC;QACDQ,OAAO,CAACG,GAAG,CAAC,+BAA+B,EAAEK,SAAS,EAAEb,QAAQ,CAACP,IAAI,CAAC;QACtE;MACF,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IACD,MAAMU,YAAYA,CAACP,QAAQ,EAAE;MAC3B,IAAI;QACF,MAAMV,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMP,KAAK,CAACuB,MAAM,CAAC,qCAAqCR,QAAQ,EAAE,EAAE;UAClEL,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACD,YAAY,CAAC,CAAC,EAAE;QACrBe,KAAK,CAAC,gBAAgB,CAAC;MACzB,EAAE,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}