{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mi-carrito\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Finalizar Compra\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Datos del Comprador\", -1 /* HOISTED */);\nconst _hoisted_5 = [\"readonly\"];\nconst _hoisted_6 = [\"readonly\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Siguiente\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Resumen de tu compra\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Selecciona el método de pago\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_select_option = _resolveComponent(\"b-form-select-option\");\n  const _component_b_form_select = _resolveComponent(\"b-form-select\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" Sección 1: Datos del usuario \"), $data.paso === 1 ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [_hoisted_4, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.irAlSiguientePaso && $options.irAlSiguientePaso(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.datosCliente.nombre = $event),\n    placeholder: \"Nombre\",\n    readonly: $data.sesionIniciada,\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, $data.datosCliente.nombre]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.datosCliente.email = $event),\n    type: \"email\",\n    placeholder: \"Email\",\n    readonly: $data.sesionIniciada,\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, $data.datosCliente.email]]), _hoisted_7, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.volverHome && $options.volverHome(...args))\n  }, \"Volver a la tienda\")], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Sección 2: Resumen del carrito y selección de método de pago \"), $data.paso === 2 ? (_openBlock(), _createElementBlock(\"section\", _hoisted_8, [_hoisted_9, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.carrito, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(item.descripcion) + \" - $\" + _toDisplayString(item.precio_unitario) + \" x \" + _toDisplayString(item.cantidad), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, \"Total: $\" + _toDisplayString($data.totalCarrito), 1 /* TEXT */), _hoisted_10, _createVNode(_component_b_form_select, {\n    modelValue: $data.metodo_pago_id,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.metodo_pago_id = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_form_select_option, {\n      value: \"1\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Tarjeta de Crédito\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_form_select_option, {\n      value: \"2\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Mercadopago\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_form_select_option, {\n      value: \"3\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Rapipago\")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.finalizarCompra && $options.finalizarCompra(...args))\n  }, \"Finalizar Compra\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","type","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","$data","paso","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","irAlSiguientePaso","$event","datosCliente","nombre","placeholder","readonly","sesionIniciada","required","_hoisted_5","email","_hoisted_6","_hoisted_7","onClick","volverHome","_hoisted_8","_hoisted_9","_Fragment","_renderList","carrito","item","index","_toDisplayString","descripcion","precio_unitario","cantidad","totalCarrito","_hoisted_10","_createVNode","_component_b_form_select","modelValue","metodo_pago_id","default","_withCtx","_component_b_form_select_option","value","_createTextVNode","_","finalizarCompra"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\MiCarrito.vue"],"sourcesContent":["<template>\n    <div class=\"mi-carrito\">\n      <h2>Finalizar Compra</h2>\n  \n      <!-- Sección 1: Datos del usuario -->\n      <section v-if=\"paso === 1\">\n        <h3>Datos del Comprador</h3>\n        <form @submit.prevent=\"irAlSiguientePaso\">\n          <input\n            v-model=\"datosCliente.nombre\"\n            placeholder=\"Nombre\"\n            :readonly=\"sesionIniciada\"\n            required\n          />\n          <input\n            v-model=\"datosCliente.email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            :readonly=\"sesionIniciada\"\n            required\n          />\n          <button type=\"submit\">Siguiente</button>\n          <button @click=\"volverHome\">Volver a la tienda</button>\n        </form>\n      </section>\n  \n      <!-- Sección 2: Resumen del carrito y selección de método de pago -->\n      <section v-if=\"paso === 2\">\n        <h3>Resumen de tu compra</h3>\n        <ul>\n          <li v-for=\"(item, index) in carrito\" :key=\"index\">\n            {{ item.descripcion }} - ${{ item.precio_unitario }} x\n            {{ item.cantidad }}\n          </li>\n        </ul>\n        <p>Total: ${{ totalCarrito }}</p>\n  \n        <h3>Selecciona el método de pago</h3>\n        <b-form-select v-model=\"metodo_pago_id\">\n          <b-form-select-option value=\"1\">Tarjeta de Crédito</b-form-select-option>\n          <b-form-select-option value=\"2\">Mercadopago</b-form-select-option>\n          <b-form-select-option value=\"3\">Rapipago</b-form-select-option>\n        </b-form-select>\n  \n        <button @click=\"finalizarCompra\">Finalizar Compra</button>\n      </section>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"axios\";\n  \n  export default {\n    data() {\n      return {\n        paso: 1,\n        sesionIniciada: false,\n        datosCliente: {\n          nombre: \"\",\n          email: \"\",\n        },\n        carrito: JSON.parse(localStorage.getItem(\"carrito\")) || [],\n        totalCarrito: JSON.parse(localStorage.getItem(\"totalCarrito\")) || 0,\n        metodo_pago_id: 1,\n      };\n    },\n    methods: {\n      irAlSiguientePaso() {\n        this.paso = 2;\n      },\n      volverHome() {\n        this.$router.push({ name: \"home\" });\n      },\n      async finalizarCompra() {\n        const token = localStorage.getItem(\"token\");\n        const id_cliente = localStorage.getItem(\"id_cliente\");\n  \n        if (!token) {\n          alert(\"Por favor, inicie sesión para continuar.\");\n          return;\n        }\n  \n        try {\n          const response = await axios.post(\n            \"http://localhost:3001/api/auth/venta\",\n            {\n              id_cliente: id_cliente,\n              productos: this.carrito.map((p) => ({\n                id_producto: p.id_producto,\n                cantidad: p.cantidad,\n                precio_unitario: parseFloat(p.precio_unitario),\n              })),\n              total: parseFloat(this.totalCarrito),\n              metodo_pago_id: this.metodo_pago_id,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${token}`, // Enviar el token como cadena\n              },\n            }\n          );\n  \n          if (response.data.message === \"Venta registrada exitosamente\") {\n            alert(\"Compra finalizada con éxito.\");\n            localStorage.removeItem(\"carrito\");\n            localStorage.removeItem(\"totalCarrito\");\n            this.$router.push({ name: \"home\" });\n          } else {\n            alert(\"Error al finalizar la compra.\");\n          }\n        } catch (error) {\n          console.error(\"Error al finalizar la compra:\", error);\n          alert(\"Error al finalizar la compra.\");\n        }\n      },\n    },\n    mounted() {\n      // Verificar si el usuario ha iniciado sesión\n      const id_cliente = localStorage.getItem(\"id_cliente\");\n      const nombre = localStorage.getItem(\"nombre\");\n      const email = localStorage.getItem(\"email\");\n  \n      if (id_cliente) {\n        this.sesionIniciada = true;\n        this.datosCliente.nombre = nombre || \"\";\n        this.datosCliente.email = email || \"\";\n      }\n  \n      // Asegurar que el carrito y total estén sincronizados con el localStorage\n      if (!this.carrito.length) {\n        this.$router.push({ name: \"home\" });\n      }\n    },\n  };\n  </script>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAAyB,YAArB,kBAAgB;;EAF1BC,GAAA;AAAA;gCAMQD,mBAAA,CAA4B,YAAxB,qBAAmB;mBAN/B;mBAAA;gCAqBUA,mBAAA,CAAwC;EAAhCE,IAAI,EAAC;AAAQ,GAAC,WAAS;;EArBzCD,GAAA;AAAA;gCA4BQD,mBAAA,CAA6B,YAAzB,sBAAoB;iCASxBA,mBAAA,CAAqC,YAAjC,8BAA4B;;;;uBApCpCG,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,UAAyB,EAEzBC,mBAAA,kCAAqC,EACtBC,KAAA,CAAAC,IAAI,U,cAAnBL,mBAAA,CAmBU,WAxBhBM,UAAA,GAMQC,UAA4B,EAC5BV,mBAAA,CAgBO;IAhBAW,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPrBC,cAAA,KAAAC,IAAA,KAO+BC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;sBACtCd,mBAAA,CAKE;IAbZ,uBAAAY,MAAA,QAAAA,MAAA,MAAAK,MAAA,IASqBV,KAAA,CAAAW,YAAY,CAACC,MAAM,GAAAF,MAAA;IAC5BG,WAAW,EAAC,QAAQ;IACnBC,QAAQ,EAAEd,KAAA,CAAAe,cAAc;IACzBC,QAAQ,EAAR;0BAZZC,UAAA,I,cASqBjB,KAAA,CAAAW,YAAY,CAACC,MAAM,E,mBAK9BnB,mBAAA,CAME;IApBZ,uBAAAY,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAeqBV,KAAA,CAAAW,YAAY,CAACO,KAAK,GAAAR,MAAA;IAC3Bf,IAAI,EAAC,OAAO;IACZkB,WAAW,EAAC,OAAO;IAClBC,QAAQ,EAAEd,KAAA,CAAAe,cAAc;IACzBC,QAAQ,EAAR;0BAnBZG,UAAA,I,cAeqBnB,KAAA,CAAAW,YAAY,CAACO,KAAK,E,GAM7BE,UAAwC,EACxC3B,mBAAA,CAAuD;IAA9C4B,OAAK,EAAAhB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,IAAAf,IAAA,CAAU;KAAE,oBAAkB,E,gCAtBxDR,mBAAA,gBA0BMA,mBAAA,kEAAqE,EACtDC,KAAA,CAAAC,IAAI,U,cAAnBL,mBAAA,CAkBU,WA7ChB2B,UAAA,GA4BQC,UAA6B,EAC7B/B,mBAAA,CAKK,c,kBAJHG,mBAAA,CAGK6B,SAAA,QAjCfC,WAAA,CA8BsC1B,KAAA,CAAA2B,OAAO,EA9B7C,CA8BsBC,IAAI,EAAEC,KAAK;yBAAvBjC,mBAAA,CAGK;MAHiCF,GAAG,EAAEmC;IAAK,GAAAC,gBAAA,CAC3CF,IAAI,CAACG,WAAW,IAAG,MAAI,GAAAD,gBAAA,CAAGF,IAAI,CAACI,eAAe,IAAG,KACpD,GAAAF,gBAAA,CAAGF,IAAI,CAACK,QAAQ;oCAGpBxC,mBAAA,CAAiC,WAA9B,UAAQ,GAAAqC,gBAAA,CAAG9B,KAAA,CAAAkC,YAAY,kBAE1BC,WAAqC,EACrCC,YAAA,CAIgBC,wBAAA;IA1CxBC,UAAA,EAsCgCtC,KAAA,CAAAuC,cAAc;IAtC9C,uBAAAlC,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAsCgCV,KAAA,CAAAuC,cAAc,GAAA7B,MAAA;;IAtC9C8B,OAAA,EAAAC,QAAA,CAuCU,MAAyE,CAAzEL,YAAA,CAAyEM,+BAAA;MAAnDC,KAAK,EAAC;IAAG;MAvCzCH,OAAA,EAAAC,QAAA,CAuC0C,MAAkB,CAvC5DG,gBAAA,CAuC0C,oBAAkB,E;MAvC5DC,CAAA;QAwCUT,YAAA,CAAkEM,+BAAA;MAA5CC,KAAK,EAAC;IAAG;MAxCzCH,OAAA,EAAAC,QAAA,CAwC0C,MAAW,CAxCrDG,gBAAA,CAwC0C,aAAW,E;MAxCrDC,CAAA;QAyCUT,YAAA,CAA+DM,+BAAA;MAAzCC,KAAK,EAAC;IAAG;MAzCzCH,OAAA,EAAAC,QAAA,CAyC0C,MAAQ,CAzClDG,gBAAA,CAyC0C,UAAQ,E;MAzClDC,CAAA;;IAAAA,CAAA;qCA4CQpD,mBAAA,CAA0D;IAAjD4B,OAAK,EAAAhB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAsC,eAAA,IAAAtC,QAAA,CAAAsC,eAAA,IAAAvC,IAAA,CAAe;KAAE,kBAAgB,E,KA5CzDR,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}