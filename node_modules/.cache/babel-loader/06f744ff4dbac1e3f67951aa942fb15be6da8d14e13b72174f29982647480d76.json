{"ast":null,"code":"import MenuPrincipal from \"@/components/MenuPrincipal.vue\";\nimport CustomScroll from \"./CustomScroll.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    MenuPrincipal,\n    CustomScroll\n  },\n  data() {\n    return {\n      compras: []\n    };\n  },\n  computed: {\n    comprasPendientes() {\n      return this.compras.filter(compra => compra.estado_nombre === \"Pendiente\");\n    },\n    comprasEnProceso() {\n      return this.compras.filter(compra => compra.estado_nombre === \"En proceso\");\n    },\n    comprasEnCamino() {\n      return this.compras.filter(compra => compra.estado_nombre === \"En camino\");\n    },\n    comprasEntregadas() {\n      return this.compras.filter(compra => compra.estado_nombre === \"Entregado\");\n    },\n    comprasAnuladas() {\n      return this.compras.filter(compra => compra.estado_nombre === \"anulado\");\n    }\n  },\n  methods: {\n    async fetchCompras() {\n      const token = localStorage.getItem(\"token\");\n      const id_cliente = localStorage.getItem(\"id_cliente\");\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n      if (!id_cliente) {\n        alert(\"ID de cliente no disponible.\");\n        return;\n      }\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/auth/compras\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            id_cliente\n          }\n        });\n        this.compras = response.data;\n        console.log(\"Compras obtenidas:\", this.compras); // Verifica los datos obtenidos\n      } catch (error) {\n        console.error(\"Error al obtener las compras:\", error);\n        alert(\"Error al obtener las compras.\");\n      }\n    },\n    async cancelarCompra(id_pedido) {\n      const confirmacion = confirm(\"¿Estás seguro de que deseas cancelar esta compra?\");\n      if (!confirmacion) return;\n      const token = localStorage.getItem(\"token\");\n      try {\n        await axios.delete(`http://localhost:3001/api/pedidos/${id_pedido}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"Compra cancelada exitosamente.\");\n        this.fetchCompras(); // Volvemos a cargar las compras para reflejar los cambios\n      } catch (error) {\n        console.error(\"Error al cancelar la compra:\", error);\n        alert(\"Error al cancelar la compra.\");\n      }\n    },\n    getClassEstado(estado_nombre) {\n      switch (estado_nombre) {\n        case \"Pendiente\":\n          return \"pendiente\";\n        case \"En proceso\":\n          return \"enproceso\";\n        case \"En camino\":\n          return \"encamino\";\n        case \"Entregado\":\n          return \"entregado\";\n        case \"anulado\":\n          return \"anulado\";\n        default:\n          return \"\";\n      }\n    },\n    getColorEstado(estado_nombre) {\n      switch (estado_nombre) {\n        case \"Pendiente\":\n          return \"#f1c40f\";\n        // Color para estado pendiente\n        case \"En proceso\":\n          return \"#f39c12\";\n        // Color para estado en proceso\n        case \"En camino\":\n          return \"#f39c12\";\n        // Color para estado en camino\n        case \"Entregado\":\n          return \"#2ecc71\";\n        // Color para estado entregado\n        case \"anulado\":\n          return \"#e60000\";\n        // Color para estado anulado\n        default:\n          return \"#000\";\n        // Color por defecto\n      }\n    }\n  },\n  mounted() {\n    this.fetchCompras();\n  }\n};","map":{"version":3,"names":["MenuPrincipal","CustomScroll","axios","components","data","compras","computed","comprasPendientes","filter","compra","estado_nombre","comprasEnProceso","comprasEnCamino","comprasEntregadas","comprasAnuladas","methods","fetchCompras","token","localStorage","getItem","id_cliente","alert","response","get","headers","Authorization","params","console","log","error","cancelarCompra","id_pedido","confirmacion","confirm","delete","getClassEstado","getColorEstado","mounted"],"sources":["C:\\Users\\estudiante\\Desktop\\sport-tienda\\src\\components\\MisCompras.vue"],"sourcesContent":["<template>\n  <custom-scroll>\n    <MenuPrincipal />\n    <div class=\"mis-compras\">\n      <h1>Mis Compras</h1>\n\n      <!-- Compras Pendientes -->\n      <div v-if=\"comprasPendientes.length > 0\">\n        <h2>Compras Pendientes</h2>\n        <ul>\n          <li\n            v-for=\"compra in comprasPendientes\"\n            :key=\"compra.id_pedido\"\n            :class=\"getClassEstado(compra.estado_nombre)\"\n          >\n            <p>\n              <span>Compra número: {{ compra.id_pedido }}</span>\n            </p>\n            <p>\n              <span>Fecha: {{ compra.fecha_venta }}</span>\n            </p>\n            <p>\n              <span>\n                Monto Total: $\n                <span\n                  :style=\"{\n                    color:\n                      compra.estado_nombre === 'anulado' ? '#e60000' : '#000',\n                  }\"\n                >\n                  {{ compra.monto_total }}\n                </span>\n              </span>\n            </p>\n            <p>\n              <span>\n                Estado:\n                <span :style=\"{ color: getColorEstado(compra.estado_nombre) }\">\n                  {{ compra.estado_nombre }}\n                </span>\n              </span>\n            </p>\n            <button\n              v-if=\"\n                compra.estado_nombre !== 'anulado' &&\n                compra.estado_nombre !== 'Entregado'\n              \"\n              @click=\"cancelarCompra(compra.id_pedido)\"\n              class=\"btn-cancelar\"\n            >\n              Cancelar Pedido\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      <!-- Compras En Proceso -->\n      <div v-if=\"comprasEnProceso.length > 0\">\n        <h2>Compras En Proceso</h2>\n        <ul>\n          <li\n            v-for=\"compra in comprasEnProceso\"\n            :key=\"compra.id_pedido\"\n            :class=\"getClassEstado(compra.estado_nombre)\"\n          >\n            <p>\n              <span>Compra número: {{ compra.id_pedido }}</span>\n            </p>\n            <p>\n              <span>Fecha: {{ compra.fecha_venta }}</span>\n            </p>\n            <p>\n              <span>\n                Monto Total: $\n                <span\n                  :style=\"{\n                    color:\n                      compra.estado_nombre === 'anulado' ? '#e60000' : '#000',\n                  }\"\n                >\n                  {{ compra.monto_total }}\n                </span>\n              </span>\n            </p>\n            <p>\n              <span>\n                Estado:\n                <span :style=\"{ color: getColorEstado(compra.estado_nombre) }\">\n                  {{ compra.estado_nombre }}\n                </span>\n              </span>\n            </p>\n            <button\n              v-if=\"\n                compra.estado_nombre !== 'anulado' &&\n                compra.estado_nombre !== 'Entregado'\n              \"\n              @click=\"cancelarCompra(compra.id_pedido)\"\n              class=\"btn-cancelar\"\n            >\n              Cancelar Pedido\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      <!-- Compras En Camino -->\n      <div v-if=\"comprasEnCamino.length > 0\">\n        <h2>Compras En Camino</h2>\n        <ul>\n          <li\n            v-for=\"compra in comprasEnCamino\"\n            :key=\"compra.id_pedido\"\n            :class=\"getClassEstado(compra.estado_nombre)\"\n          >\n            <p>\n              <span>Compra número: {{ compra.id_pedido }}</span>\n            </p>\n            <p>\n              <span>Fecha: {{ compra.fecha_venta }}</span>\n            </p>\n            <p>\n              <span>\n                Monto Total: $\n                <span\n                  :style=\"{\n                    color:\n                      compra.estado_nombre === 'anulado' ? '#e60000' : '#000',\n                  }\"\n                >\n                  {{ compra.monto_total }}\n                </span>\n              </span>\n            </p>\n            <p>\n              <span>\n                Estado:\n                <span :style=\"{ color: getColorEstado(compra.estado_nombre) }\">\n                  {{ compra.estado_nombre }}\n                </span>\n              </span>\n            </p>\n            <button\n              v-if=\"\n                compra.estado_nombre !== 'anulado' &&\n                compra.estado_nombre !== 'Entregado'\n              \"\n              @click=\"cancelarCompra(compra.id_pedido)\"\n              class=\"btn-cancelar\"\n            >\n              Cancelar Pedido\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      <!-- Compras Entregadas -->\n      <div v-if=\"comprasEntregadas.length > 0\">\n        <h2>Compras Entregadas</h2>\n        <ul>\n          <li\n            v-for=\"compra in comprasEntregadas\"\n            :key=\"compra.id_pedido\"\n            :class=\"getClassEstado(compra.estado_nombre)\"\n          >\n            <p>\n              <span>Compra número: {{ compra.id_pedido }}</span>\n            </p>\n            <p>\n              <span>Fecha: {{ compra.fecha_venta }}</span>\n            </p>\n            <p>\n              <span>\n                Monto Total: $\n                <span\n                  :style=\"{\n                    color:\n                      compra.estado_nombre === 'anulado' ? '#e60000' : '#000',\n                  }\"\n                >\n                  {{ compra.monto_total }}\n                </span>\n              </span>\n            </p>\n            <p>\n              <span>\n                Estado:\n                <span :style=\"{ color: getColorEstado(compra.estado_nombre) }\">\n                  {{ compra.estado_nombre }}\n                </span>\n              </span>\n            </p>\n            <!-- No se muestra botón de cancelar si el estado es 'Entregado' -->\n          </li>\n        </ul>\n      </div>\n\n      <!-- Compras Anuladas -->\n      <div v-if=\"comprasAnuladas.length > 0\">\n        <h2>Compras Anuladas</h2>\n        <ul>\n          <li\n            v-for=\"compra in comprasAnuladas\"\n            :key=\"compra.id_pedido\"\n            :class=\"getClassEstado(compra.estado_nombre)\"\n          >\n            <p>\n              <span>Compra número: {{ compra.id_pedido }}</span>\n            </p>\n            <p>\n              <span>Fecha: {{ compra.fecha_venta }}</span>\n            </p>\n            <p>\n              <span>\n                Monto Total: $\n                <span\n                  :style=\"{\n                    color:\n                      compra.estado_nombre === 'anulado' ? '#e60000' : '#000',\n                  }\"\n                >\n                  {{ compra.monto_total }}\n                </span>\n              </span>\n            </p>\n            <p>\n              <span>\n                Estado:\n                <span :style=\"{ color: getColorEstado(compra.estado_nombre) }\">\n                  {{ compra.estado_nombre }}\n                </span>\n              </span>\n            </p>\n            <!-- No se muestra botón de cancelar si el estado es 'anulado' -->\n          </li>\n        </ul>\n      </div>\n\n      <div v-else>\n        <p>No tienes compras registradas.</p>\n      </div>\n    </div>\n  </custom-scroll>\n</template>\n\n<script>\nimport MenuPrincipal from \"@/components/MenuPrincipal.vue\";\nimport CustomScroll from \"./CustomScroll.vue\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    MenuPrincipal,\n    CustomScroll,\n  },\n  data() {\n    return {\n      compras: [],\n    };\n  },\n  computed: {\n    comprasPendientes() {\n      return this.compras.filter(\n        (compra) => compra.estado_nombre === \"Pendiente\"\n      );\n    },\n    comprasEnProceso() {\n      return this.compras.filter(\n        (compra) => compra.estado_nombre === \"En proceso\"\n      );\n    },\n    comprasEnCamino() {\n      return this.compras.filter(\n        (compra) => compra.estado_nombre === \"En camino\"\n      );\n    },\n    comprasEntregadas() {\n      return this.compras.filter(\n        (compra) => compra.estado_nombre === \"Entregado\"\n      );\n    },\n    comprasAnuladas() {\n      return this.compras.filter(\n        (compra) => compra.estado_nombre === \"anulado\"\n      );\n    },\n  },\n  methods: {\n    async fetchCompras() {\n      const token = localStorage.getItem(\"token\");\n      const id_cliente = localStorage.getItem(\"id_cliente\");\n      if (!token) {\n        alert(\"Por favor, inicie sesión para continuar.\");\n        return;\n      }\n\n      if (!id_cliente) {\n        alert(\"ID de cliente no disponible.\");\n        return;\n      }\n\n      try {\n        const response = await axios.get(\n          \"http://localhost:3001/api/auth/compras\",\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n            params: {\n              id_cliente,\n            },\n          }\n        );\n        this.compras = response.data;\n        console.log(\"Compras obtenidas:\", this.compras); // Verifica los datos obtenidos\n      } catch (error) {\n        console.error(\"Error al obtener las compras:\", error);\n        alert(\"Error al obtener las compras.\");\n      }\n    },\n    async cancelarCompra(id_pedido) {\n      const confirmacion = confirm(\n        \"¿Estás seguro de que deseas cancelar esta compra?\"\n      );\n      if (!confirmacion) return;\n\n      const token = localStorage.getItem(\"token\");\n\n      try {\n        await axios.delete(`http://localhost:3001/api/pedidos/${id_pedido}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        alert(\"Compra cancelada exitosamente.\");\n        this.fetchCompras(); // Volvemos a cargar las compras para reflejar los cambios\n      } catch (error) {\n        console.error(\"Error al cancelar la compra:\", error);\n        alert(\"Error al cancelar la compra.\");\n      }\n    },\n    getClassEstado(estado_nombre) {\n      switch (estado_nombre) {\n        case \"Pendiente\":\n          return \"pendiente\";\n        case \"En proceso\":\n          return \"enproceso\";\n        case \"En camino\":\n          return \"encamino\";\n        case \"Entregado\":\n          return \"entregado\";\n        case \"anulado\":\n          return \"anulado\";\n        default:\n          return \"\";\n      }\n    },\n    getColorEstado(estado_nombre) {\n      switch (estado_nombre) {\n        case \"Pendiente\":\n          return \"#f1c40f\"; // Color para estado pendiente\n        case \"En proceso\":\n          return \"#f39c12\"; // Color para estado en proceso\n        case \"En camino\":\n          return \"#f39c12\"; // Color para estado en camino\n        case \"Entregado\":\n          return \"#2ecc71\"; // Color para estado entregado\n        case \"anulado\":\n          return \"#e60000\"; // Color para estado anulado\n        default:\n          return \"#000\"; // Color por defecto\n      }\n    },\n  },\n  mounted() {\n    this.fetchCompras();\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para cada estado */\n.pendiente {\n  border-left: 5px solid #f1c40f;\n}\n\n.enproceso {\n  border-left: 5px solid #f39c12;\n}\n\n.encamino {\n  border-left: 5px solid #f39c12;\n}\n\n.entregado {\n  border-left: 5px solid #2ecc71;\n}\n\n.anulado {\n  border-left: 5px solid #e60000;\n  color: #e60000;\n}\n\n/* Estilos generales */\n.mis-compras {\n  padding: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n  background-color: #f4f4f4;\n  border-radius: 8px;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #333;\n}\n\nh2 {\n  font-size: 20px;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  color: #333;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 10px;\n  transition: background-color 0.3s, transform 0.2s;\n}\n\nli:hover {\n  background-color: #eaf2e0;\n  transform: scale(1.02);\n}\n\np {\n  margin: 5px 0;\n  color: #555;\n}\n\np span {\n  font-weight: bold;\n  color: #0a641a;\n}\n\n.btn-cancelar {\n  background-color: #ff4d4d;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 8px 12px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s, transform 0.2s;\n}\n\n.btn-cancelar:hover {\n  background-color: #ff1a1a;\n  transform: scale(1.05);\n}\n\n.btn-cancelar:active {\n  background-color: #e60000;\n}\n\n.no-compras {\n  text-align: center;\n  font-size: 18px;\n  color: #888;\n}\n\n/* Media Queries para Responsividad */\n\n/* Pantallas hasta 768px de ancho */\n@media (max-width: 768px) {\n  .mis-compras {\n    padding: 15px;\n  }\n\n  h1 {\n    font-size: 20px;\n  }\n\n  h2 {\n    font-size: 20px;\n  }\n\n  li {\n    padding: 15px;\n  }\n\n  p {\n    font-size: 14px;\n  }\n}\n\n/* Pantallas hasta 480px de ancho */\n@media (max-width: 480px) {\n  .mis-compras {\n    padding: 10px;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 16px;\n  }\n\n  li {\n    padding: 10px;\n  }\n\n  p {\n    font-size: 12px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}